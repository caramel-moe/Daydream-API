From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: LemonCaramel <admin@caramel.moe>
Date: Mon, 19 Feb 2024 00:28:31 +0900
Subject: [PATCH] Add Early Loader


diff --git a/src/main/java/moe/caramel/daydream/EarlyLoader.java b/src/main/java/moe/caramel/daydream/EarlyLoader.java
new file mode 100644
index 0000000000000000000000000000000000000000..5282d9353d8629f025ae89518fa07960e26db17f
--- /dev/null
+++ b/src/main/java/moe/caramel/daydream/EarlyLoader.java
@@ -0,0 +1,36 @@
+package moe.caramel.daydream;
+
+import org.bukkit.UnsafeValues;
+import org.bukkit.inventory.ItemFactory;
+import org.bukkit.inventory.meta.ItemMeta;
+import org.jetbrains.annotations.ApiStatus;
+import org.jspecify.annotations.NullMarked;
+import java.util.ServiceLoader;
+
+/**
+ * Early Loader.
+ */
+@NullMarked
+public interface EarlyLoader {
+
+    /**
+     * Early Loader Instance
+     */
+    EarlyLoader LOADER = ServiceLoader.load(EarlyLoader.class)
+        .findFirst().orElseThrow();
+
+    /**
+     * Gets the instance of the item factory (for {@link ItemMeta}).
+     *
+     * @return the item factory
+     * @see ItemFactory
+     */
+    ItemFactory getItemFactory();
+
+    /**
+     * @return the unsafe values instance
+     * @see UnsafeValues
+     */
+    @ApiStatus.Experimental
+    UnsafeValues getUnsafe();
+}
diff --git a/src/main/java/org/bukkit/Bukkit.java b/src/main/java/org/bukkit/Bukkit.java
index ca8d342043359768d052d2ec0812cda426e0d65d..feae9a160b02dae258d9fa965c081253562f9c9a 100644
--- a/src/main/java/org/bukkit/Bukkit.java
+++ b/src/main/java/org/bukkit/Bukkit.java
@@ -2215,7 +2215,7 @@ public final class Bukkit {
      */
     @NotNull
     public static ItemFactory getItemFactory() {
-        return server.getItemFactory();
+        return (server == null) ? moe.caramel.daydream.EarlyLoader.LOADER.getItemFactory() : server.getItemFactory(); // Daydream - (feature) Fix errors that occur when early load
     }
 
     /**
@@ -2743,7 +2743,7 @@ public final class Bukkit {
     @Deprecated(since = "1.7.2")
     @NotNull
     public static UnsafeValues getUnsafe() {
-        return server.getUnsafe();
+        return (server == null) ? moe.caramel.daydream.EarlyLoader.LOADER.getUnsafe() : server.getUnsafe(); // Daydream - (feature) Fix errors that occur when early load
     }
 
 
diff --git a/src/main/java/org/bukkit/inventory/ItemStack.java b/src/main/java/org/bukkit/inventory/ItemStack.java
index 7b0c710608bf83fbdbc72b049f2a78bfa8008b76..2bcd1d6821479451e46f61aac50ba000c2f6b4a7 100644
--- a/src/main/java/org/bukkit/inventory/ItemStack.java
+++ b/src/main/java/org/bukkit/inventory/ItemStack.java
@@ -780,7 +780,7 @@ public class ItemStack implements Cloneable, ConfigurationSerializable, Translat
      */
     @NotNull
     public ItemStack enchantWithLevels(final int levels, final boolean allowTreasure, final @NotNull java.util.Random random) {
-        return Bukkit.getServer().getItemFactory().enchantWithLevels(this, levels, allowTreasure, random);
+        return Bukkit.getItemFactory().enchantWithLevels(this, levels, allowTreasure, random); // Daydream - (feature) Fix errors that occur when early load
     }
 
     /**
@@ -803,7 +803,7 @@ public class ItemStack implements Cloneable, ConfigurationSerializable, Translat
     @NotNull
     @Override
     public net.kyori.adventure.text.event.HoverEvent<net.kyori.adventure.text.event.HoverEvent.ShowItem> asHoverEvent(final @NotNull java.util.function.UnaryOperator<net.kyori.adventure.text.event.HoverEvent.ShowItem> op) {
-        return org.bukkit.Bukkit.getServer().getItemFactory().asHoverEvent(this, op);
+        return org.bukkit.Bukkit.getItemFactory().asHoverEvent(this, op); // Daydream - (feature) Fix errors that occur when early load
     }
 
     /**
@@ -812,7 +812,7 @@ public class ItemStack implements Cloneable, ConfigurationSerializable, Translat
      * @return display name of the {@link ItemStack}
      */
     public net.kyori.adventure.text.@NotNull Component displayName() {
-        return Bukkit.getServer().getItemFactory().displayName(this);
+        return Bukkit.getItemFactory().displayName(this); // Daydream - (feature) Fix errors that occur when early load
     }
 
     /**
@@ -836,7 +836,7 @@ public class ItemStack implements Cloneable, ConfigurationSerializable, Translat
      */
     @NotNull
     public ItemStack ensureServerConversions() {
-        return Bukkit.getServer().getItemFactory().ensureServerConversions(this);
+        return Bukkit.getItemFactory().ensureServerConversions(this); // Daydream - (feature) Fix errors that occur when early load
     }
 
     /**
@@ -960,7 +960,7 @@ public class ItemStack implements Cloneable, ConfigurationSerializable, Translat
     @Nullable
     @Deprecated
     public String getI18NDisplayName() {
-        return Bukkit.getServer().getItemFactory().getI18NDisplayName(this);
+        return Bukkit.getItemFactory().getI18NDisplayName(this); // Daydream - (feature) Fix errors that occur when early load
     }
 
     /**
